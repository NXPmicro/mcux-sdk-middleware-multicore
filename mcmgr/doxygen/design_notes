
XRDC driver:

- Should decouple XRDC driver from RPM - see header 'xrdc_mem_nums_t'.
- Use of malloc?  MQX this will be fine but not on bare metal.



RDC config:

Define a 'domain'.  Assign CPU, peripherals, and memory regions to it.

- What peripherals will be controlled by CPU0 vs CPU1?
  - Peripheral number / address (ex LPSPI2).

- Memory regions defined
  - CPU0 only
  - CPU1 only
  - Shared

Use the peripheral and memory region configs to create domains.

- Access levels



Multicore manager:

- Must keep in mind L5K-specific items and abstract away as best as possible
  so this can be ported to i.MX, etc.




Schedule

Pre-Silicon:

* 1w (Justin) - Define config block properties
* 2d (Justin) - Specify config block JSON layout
* 2w (Justin) - Config block serialization / deserialization with BSON and host tools
1w (Emmanuel) - Define and implement config block access API
2w (Justin / Emmanuel) - Generate XRDC configuration from config block settings

1w (Raghava) - Define and implement APIs for core and memory manipulation
1w (Mario) - Define memory mapping tables and APIs for virtual->physical and regions
1w (Mario) - Load RPM app code into secondary cores
1w (Raghava) - Startup/shutdown of secondary cores APIs
1w (Mario) - Core properties APIs

Post-Silicon:

2w (?) - Configure system clocks for both cores based on configuration block data
1w (?) - Documentation
4w (?) - Test and debug on real silicon

1w (?) - RP Framework - define config data storage location and packaging


